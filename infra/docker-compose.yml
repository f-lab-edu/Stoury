version: '3'
networks:
  kafka-net:
    driver: bridge
services:
  redis:
    image: redis
    ports:
      - "8379:6379"
  mysql:
    image: "mysql"
    container_name: mysql
    restart: always
    ports:
      - "4306:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - TZ=Asia/Seoul
    volumes:
      - ./provision/mysql/init:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  zookeeper:
    image: 'wurstmeister/zookeeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "chats:1:1"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-net
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/volume:/prometheus
    ports:
      - '9090:9090'
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/console'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/volume:/var/lib/grafana
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"