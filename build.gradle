plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "org.asciidoctor.jvm.convert"

    configurations {
        asciidoctorExt

        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.flywaydb:flyway-core'
        implementation 'org.flywaydb:flyway-mysql'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.session:spring-session-data-redis'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        // https://mvnrepository.com/artifact/org.spockframework/spock-core
        testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
        // https://mvnrepository.com/artifact/org.spockframework/spock-spring
        testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'
        testImplementation('net.bytebuddy:byte-buddy:1.12.19')

        //Querydsl 추가
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    test {
        outputs.dir snippetsDir
    }

    bootJar {
        dependsOn asciidoctor
        from("${asciidoctor.outputDir}/html5") {
            into 'static/docs'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }


    asciidoctor {
        inputs.dir snippetsDir
        configurations 'asciidoctorExt'
        dependsOn test
        baseDirFollowsSourceFile()
    }

    asciidoctor.doFirst {
        delete file('src/main/resources/static/docs')
    }

    task copyDocument(type: Copy) {
        dependsOn asciidoctor
        from file("build/docs/asciidoc")
        into file("src/main/resources/static/docs")
    }

    build {
        dependsOn copyDocument
    }
}

project(':Stoury-chats') {
    dependencies {
        implementation 'org.springframework.kafka:spring-kafka'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
    }
}

project(':Stoury-batch') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        testImplementation 'org.springframework.batch:spring-batch-test'
    }
}

dependencies {
    // 구글 지오코딩 api
    implementation 'com.google.maps:google-maps-services:2.2.0'
}